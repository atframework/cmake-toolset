diff --git a/cmake/compilers/Clang.cmake b/cmake/compilers/Clang.cmake
index bb7401e..232c704 100644
--- a/cmake/compilers/Clang.cmake
+++ b/cmake/compilers/Clang.cmake
@@ -54,9 +54,9 @@ if (ANDROID_PLATFORM)
     set(TBB_COMMON_COMPILE_FLAGS ${TBB_COMMON_COMPILE_FLAGS} $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=2>)
 endif()
 
-if (MINGW)
-    list(APPEND TBB_COMMON_COMPILE_FLAGS -U__STRICT_ANSI__)
-endif()
+# if (MINGW)
+#     list(APPEND TBB_COMMON_COMPILE_FLAGS -U__STRICT_ANSI__)
+# endif()
 
 # Enabling LTO on Android causes the NDK bug.
 # NDK throws the warning: "argument unused during compilation: '-Wa,--noexecstack'"
diff --git a/cmake/compilers/GNU.cmake b/cmake/compilers/GNU.cmake
index 86958e3..269720e 100644
--- a/cmake/compilers/GNU.cmake
+++ b/cmake/compilers/GNU.cmake
@@ -59,9 +59,9 @@ if ("${CMAKE_SYSTEM_PROCESSOR}" MATCHES "mips")
     set(TBB_TEST_COMPILE_FLAGS ${TBB_TEST_COMPILE_FLAGS} -DTBB_TEST_LOW_WORKLOAD $<$<CONFIG:DEBUG>:-mxgot>)
 endif()
 
-if (MINGW)
-    list(APPEND TBB_COMMON_COMPILE_FLAGS -U__STRICT_ANSI__)
-endif()
+# if (MINGW)
+#     list(APPEND TBB_COMMON_COMPILE_FLAGS -U__STRICT_ANSI__)
+# endif()
 
 # For some reason GCC does not instrument code with Thread Sanitizer when lto is enabled and C linker is used.
 if (NOT TBB_SANITIZE MATCHES "thread")
diff --git a/cmake/utils.cmake b/cmake/utils.cmake
index 06d3a9a..a501b61 100644
--- a/cmake/utils.cmake
+++ b/cmake/utils.cmake
@@ -18,7 +18,7 @@ macro(tbb_remove_compile_flag flag)
     set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY COMPILE_OPTIONS ${_tbb_compile_options})
     unset(_tbb_compile_options)
     if (CMAKE_CXX_FLAGS)
-        string(REGEX REPLACE ${flag} "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+        string(REGEX REPLACE "(^|[ \t\r\n]+)${flag}($|[ \t\r\n]+)" " " CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
     endif()
 endmacro()
 
