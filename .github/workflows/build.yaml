name: "Build"

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh format ;
  gcc_static_test:
    name: "gcc.static.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh gcc.static.test ;
  gcc_shared_test:
    name: "gcc.shared.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh gcc.shared.test ;
  gcc_libressl_test:
    name: "gcc.libressl.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh gcc.libressl.test ;
  gcc_mbedtls_test:
    name: "gcc.mbedtls.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh gcc.mbedtls.test ;
  gcc_48_test:
    name: "gcc.4.8.test"
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          sudo apt-get update;
          sudo apt-get install --no-install-recommends --no-install-suggests -y g++-4.8 ;
          bash ci/do_ci.sh gcc.4.8.test ;
  clang_test:
    name: "clang.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh clang.test ;
  gcc_vcpkg_test:
    name: "gcc.vcpkg.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh gcc.vcpkg.test ;
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/share/vcpkg/installed
          key: ${{ runner.os }}-${{ hashFiles('/usr/local/share/vcpkg/installed/**') }}
  msys2_mingw_static_test:
    name: "msys2.mingw.static.test"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          C:/msys64/msys2_shell.cmd -mingw64 -defterm -no-start -here -lc "ci/do_ci.sh msys2.mingw.static.test"
  msys2_mingw_shared_test:
    name: "msys2.mingw.shared.test"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          C:/msys64/msys2_shell.cmd -mingw64 -defterm -no-start -here -lc "ci/do_ci.sh msys2.mingw.shared.test"
  msvc_static_test:
    name: "msvc.static.test"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: pwsh
        run: |
          $vswhere = "${ENV:ProgramFiles(x86)}/Microsoft Visual Studio/Installer/vswhere.exe"
          $vsInstallationPath = & $vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          Import-Module "$vsInstallationPath/Common7/Tools/Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -VsInstallPath "$vsInstallationPath" -StartInPath $(Get-Location)
          pwsh ci/do_ci.ps1 msvc.static.test ;
  msvc_shared_test:
    name: "msvc.shared.test"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: pwsh
        run: |
          $vswhere = "${ENV:ProgramFiles(x86)}/Microsoft Visual Studio/Installer/vswhere.exe"
          $vsInstallationPath = & $vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          Import-Module "$vsInstallationPath/Common7/Tools/Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -VsInstallPath "$vsInstallationPath" -StartInPath $(Get-Location)
          pwsh ci/do_ci.ps1 msvc.shared.test ;
  msvc_vcpkg_test:
    name: "msvc.vcpkg.test"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: pwsh
        run: |
          $vswhere = "${ENV:ProgramFiles(x86)}/Microsoft Visual Studio/Installer/vswhere.exe"
          $vsInstallationPath = & $vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          Import-Module "$vsInstallationPath/Common7/Tools/Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -VsInstallPath "$vsInstallationPath" -StartInPath $(Get-Location)
          pwsh ci/do_ci.ps1 msvc.vcpkg.test ;
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            C:/vcpkg/installed
          key: ${{ runner.os }}-${{ hashFiles('C:/vcpkg/installed/**') }}
  msvc2017_test:
    name: "msvc2017.test"
    runs-on: windows-2016
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: pwsh
        run: |
          function Invoke-Environment {
            param
            (
              [Parameter(Mandatory = $true)]
              [string] $Command
            )
            $Command = "`"" + $Command + "`""
            cmd /c "$Command > nul 2>&1 && set" | . { process {
                if ($_ -match '^([^=]+)=(.*)') {
                  [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
                }
              } }
          }
          Invoke-Environment 'call "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvars64.bat"'
          pwsh ci/do_ci.ps1 msvc2017.test ;
  macos_appleclang_test:
    name: "macos.appleclang.test"
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh clang.test ;
  android_test:
    name: "android.test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh android.test ;
  # Build libuv on ios has some problem now.
  ios_test:
    name: "ios.test"
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI Job
        shell: bash
        run: |
          bash ci/do_ci.sh ios.test ;